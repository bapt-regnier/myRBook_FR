[
["IDE.html", " 5 Choisir un environnement de développement 5.1 Editeurs de texte et environnement de développement 5.2 RStudio 5.3 Notepad++ avec Npp2R 5.4 Geany (pour Linux, Mac OSX et Windows) 5.5 Autres solutions 5.6 Conclusion", " 5 Choisir un environnement de développement 5.1 Editeurs de texte et environnement de développement Il existe de très nombreux éditeurs de texte, le chapitre précédent a permit d’en introduire quelque uns parmis les plus simples comme le bloc note de Windows. Rapidement les limites de ces éditeurs ont rendu la tâche d’écrire un script fastidieuse. En effet, même en structurant son script avec des commentaires, il reste difficile de se répérer dans celui-ci. C’est là qu’interviennent les éditeurs de texte spécialisés qui vont permettre une écriture et une lecture agréable et simplifiée. L’éditeur de texte pour R certainement le plus répandu est Rstudio, mais il en existe bien d’autres. Faire une liste exhaustive de toutes les solutions disponibles sort du cadre de ce livre, ainsi nous nous focaliserons sur les trois solutions que j’utilise au quotidien que sont Notepad++, Rstudio, et Geany. 5.2 RStudio Figure 5.1: Logo RStudio. 5.2.1 Installer RStudio Le programme pour installer Rstudio se retrouve dans la partie Products du site web de Rstudio (https://www.rstudio.com/). Nous allons installer RStudio pour un usage local (sur notre ordinateur), donc la version qui nous intéresse est Desktop. Nous allons utiliser la version Open Source qui est gratuite. Ensuite il nous suffit de sélectionner la version qui correspond à notre système d’exploitation, de télécharger le fichier correspondant et de l’exécuter pour lancer l’installation. Nous pouvons conserver les options par défaut tout au long de l’installation. 5.2.2 Un script avec RStudio Nous pouvons alors ouvrir RStudio. Lors de la première ouverture, l’interface est divisée en deux avec à gauche la console R que nous avons vu au chapitre précédent (Figure 5.2). Pour ouvrir un nouveau script, nous allons dans le menu File, New File, R script. Par défaut ce fichier a comme nom Untitled1. Nous avons vu au chapitre précédent l’importance de donner un nom pertinent à nos scripts, c’est pourquoi nous allons le renommer selecEnvDev.R, dans le menu File, avec l’option Save As…. Nous avons pu noter que la partie gauche de RStudio est désormais séparée en deux, avec en bas de l’écran la console et en haut de l’écran le script. Figure 5.2: Capture d’écran de RStudio sous Windows : fenêtre par défaut. Nous pouvons alors commencer l’écriture de notre script avec les commentaires décrivant ce que nous allons y trouver, et y ajouter un calcul simple. Une fois que nous avons recopié le code suivant, nous pouvons sauver notre script avec la commande CTRL + S ou en se rendant dans File, puis Save. # ------------------------------------------------------------ # Un script pour choisir son IDE # créé le 27/06/2018 # modifié le 06/11/2018 # François Rebaudo # ------------------------------------------------------------ # [1] calcul simple # ------------------------------------------------------------ nbrRep &lt;- 5 pi * nbrRep^2 ## [1] 78.53982 Pour exécuter notre script, il suffit de sélectionner les lignes que nous souhaitons exécuter et d’utiliser la combinaison de touches CTRL + ENTER. Le résultat apparaît dans la console (Figure 5.3). Figure 5.3: Capture d’écran de RStudio sous Windows : exécuter un script avec CTRL + ENTER. Nous pouvons voir que par défaut dans la partie du script les commentaires apparaissent en vert, les chiffres en bleu, et le reste du code en noir. Dans la partie de la console ce qui a été exécuté apparaît en bleu et les résultats de l’exécution en noir. Nous pouvons également noter que dans la partie du code chaque ligne comporte un numéro correspondant au numéro de ligne à gauche sur fond gris. Il s’agit de la coloration syntaxique par défaut avec RStudio. Cette coloration syntaxique peut être modifiée en se rendant dans le menu Tools, Global Options…, Appearance, puis en choisissant un autre thème dans la liste Editor theme:. Nous allons choisir le thème Cobalt, puis OK (Figure 5.4). Figure 5.4: Capture d’écran de RStudio sous Windows : changer les paramètres de coloration syntaxique. Nous savons comment créer un nouveau script, le sauvegarder, exécuter son contenu, et changer l’apparence de RStudio. Nous verrons les nombreux autres avantages de RStudio tout au long de ce livre car c’est l’environnement de développement qui sera utilisé. Nous serons néanmois particulièrement vigilents à ce que tous les scripts développés tout au long de ce livre s’exécute de la même façon quel que soit l’environnement de développement utilisé. 5.3 Notepad++ avec Npp2R Figure 5.5: Logo Notepad++ 5.3.1 Installer Notepad++ (pour Windows uniquement) Le programme pour installer Notepad++ se trouve dans l’onglet Downloads (https://notepad-plus-plus.org/download/). Vous pouvez choisir entre la version 32-bit et 64-bit (64-bit si vous ne savez pas quelle version choisir). Notepad++ seul est suffisant pour écrire un script, mais il est encore plus puissant avec Notepad to R (Npp2R) qui permet d’exécuter automatiquement nos script dans une console en local sur notre ordinateur ou à distance sur un serveur. 5.3.2 Installer Npp2R Le programme pour installer Npp2R est hébergé sur le site de Sourceforge (https://sourceforge.net/projects/npptor/). Npp2R doit être installé après Notepad++. 5.3.3 Un script avec Notepad++ Lors de la première ouverture Notepad++ affiche un fichier vide new 1 (Figura 5.6). Figure 5.6: Capture d’écran de Notepad++ sous Windows : fenêtre par défaut. Puisque nous avons déjà créer un script pour le tester avec RStudio, nous allons l’ouvrir à nouveau avec Notepad++. Dans Fichier, selectionnons Ouvrir… puis choisir le script selecEnvDev.R créé précédemment. Une fois le script ouvert, allons dans Langage, puis R, et encore une fois R. La coloration syntaxique apparaît (Figura 5.7). Figure 5.7: Capture d’écran de Notepad++ sous Windows : exécuter un script avec F8. L’execution du script ne peut se faire que si Npp2R est en cours d’exécution. Pour se faire il est nécessaire de lancer le programme Npp2R depuis l’invite de Windows. Un icône devrait apparaître en bas de votre écran. L’exécution automatique du code depuis Notepad++ se fait en sélectionnant le code à exécuter puis en utilisant la commande F8. Si la commande ne fonctionne pas et que vous venez d’installer Notepad++, il est peut être nécessaire de redémarrer votre ordinateur. Si la commande fonctionne, une nouvelle fenêtre va s’ouvrir avec une consol exécutant les lignes souhaitées (Figura 5.8. Figure 5.8: Capture d’écran de Notepad++ sous Windows : la console avec F8. Comme pour RStudio, la coloration syntaxique peut être modifiée depuis le menu Paramètres, et un nouveau thème peut être sélectionné (par exemple Solarized dans la Figura 5.9) Figure 5.9: Capture d’écran de Notepad++ sous Windows : coloration syntaxique avec le thème Solarized. Par rapport aux autres éditeurs de texte, Notepad++ a l’avantage d’être très léger et offre une vaste gamme d’options pour personnaliser l’écriture du code. 5.4 Geany (pour Linux, Mac OSX et Windows) Figure 5.10: Logo Geany 5.4.1 Installer Geany Le programme pour l’installation de Geany se trouve sous l’onglet Downloads dans le menu de gauche Releases de la page web (https://www.geany.org/). Ensuite il suffit de télécharger l’exécutable pour Windows ou le dmg pour Mac OSX. Les utilisateurs de Linux préfèrerons un sudo apt-get install geany. 5.4.2 Un script avec Geany Lors de la première ouverture, comme pour RStudio et Notepad++, un fichier vide est créé (Figure 5.11). Figure 5.11: Capture d’écran de Geany sous Windows : fenêtre par défaut. Nous pouvons ouvrir notre script avec Fichier, Ouvrir (Figure 5.12). Figure 5.12: Capture d’écran de Geany sous Windows : ouvrir un script. Pour exécuter notre script, la version de Geany pour Windows ne dispose pas d’un terminal intégré, ce qui rend son utilisation limitée sous ce système d’exploitation. L’exécution d’un script peut se faire en ouvrant R dans une fenêtre à part et en copiant et collant les lignes à exécuter. Sous Linux et Mac OSX, il suffit d’ouvrir R dans le terminal situé dans la partie basse de la fenêtre de Geany avec la commande R. Nous pouvons ensuite paramétré Geany pour qu’une combinaison de touches permette d’exécuter le code selectionné (par exemple CTRL + R). Pour cela il faut tout d’abord autoriser l’envoi de sélection vers le terminal (send_selection_unsafe=true) dans le fichier geany.conf puis choisir la commande d’envoi vers le terminal (dans Editar, Preferencias, Combinaciones). Pour changer le thème de Geany, il existe une collection de thèmes accessibles sur GitHub (https://github.com/geany/geany-themes/). Le thème peut ensuite être changé via le menu Ver, Cambiar esquema de color… (un exemple avec le thème Solarized, Figure 5.13). Figure 5.13: Capture d’écran de Geany sous Windows : changer les paramètres de coloration syntaxique. 5.5 Autres solutions Il existe beaucoup d’autres solutions, certaines spécialisées pour R comme Tinn-R (https://sourceforge.net/projects/tinn-r/), et d’autres plus généralistes pour la programmation comme Atom (https://atom.io/), Sublime Text (https://www.sublimetext.com/), Vim (https://www.vim.org/), Gedit (https://wiki.gnome.org/Apps/Gedit), GNU Emacs (https://www.gnu.org/software/emacs/), Jupyter (http://jupyter.org) ou encore Brackets (http://brackets.io/) et Eclipse (http://www.eclipse.org/). 5.6 Conclusion Felicitations, nous sommes arrivés au bout de ce chapitre sur environnements de développement pour utiliser R. Nous savons désormais : Installer RStudio, Geany ou Notepad++ Reconnaître et choisir notre environnement préféré A partir d’ici nous allons pouvoir nous concentrer sur le language de programmation R dans un environnement facilitant le travail de lecture et d’écriture du code. C’est un grand pas en avant pour maîtriser R. "]
]
